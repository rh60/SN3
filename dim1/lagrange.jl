function LagrangeBase(n::Integer)
    if n==1
            [x->1-x, x->x],
            [x->-1, x->1]
    elseif n==2
            [x->2 * (x - 1/2) * (x - 1), x->-4 * x * (x - 1), x->2 * x * (x - 1/2)],
            [x->4 * x - 3, x->-8 * x + 4, x->4 * x - 1]
    elseif n==3
            [x->-9/2 * (x - 1/3) * (x - 2/3) * (x - 1),
            x->27/2 * x * (x - 2/3) * (x - 1),
            x->-27/2 * x * (x - 1/3) * (x - 1),
            x->9/2 * x * (x - 1/3) * (x - 2/3)],
            [x->-9/2 * (x - 2/3) * (x - 1) - 9/2 * (x - 1/3) * (x - 1) - 9/2 * (x - 1/3) * (x - 2/3),
            x->27/2 * (x - 2/3) * (x - 1) + 27/2 * x * (x - 1) + 27/2 * x * (x - 2/3),
            x->-27/2 * (x - 1/3) * (x - 1) - 27/2 * x * (x - 1) - 27/2 * x * (x - 1/3),
            x->9/2 * (x - 1/3) * (x - 2/3) + 9/2 * x * (x - 2/3) + 9/2 * x * (x - 1/3)]
    elseif n==4
            [x->32/3 * x ^ 4 - 80/3 * x ^ 3 + 70/3 * x ^ 2 - 25/3 * x + 1,
            x->-128/3 * x ^ 4 + 96 * x ^ 3 - 208/3 * x ^ 2 + 16 * x,
            x->64 * x ^ 4 - 128 * x ^ 3 + 76 * x ^ 2 - 12 * x,
            x->-128/3 * x ^ 4 + 224/3 * x ^ 3 - 112/3 * x ^ 2 + 16/3 * x,
            x->32/3 * x ^ 4 - 16 * x ^ 3 + 22/3 * x ^ 2 - x],
            [x->128/3 * x ^ 3 - 80 * x ^ 2 + 140/3 * x - 25/3,
            x->-512/3 * x ^ 3 + 288 * x ^ 2 - 416/3 * x + 16,
            x->256 * x ^ 3 - 384 * x ^ 2 + 152 * x - 12,
            x->-512/3 * x ^ 3 + 224 * x ^ 2 - 224/3 * x + 16/3,
            x->128/3 * x ^ 3 - 48 * x ^ 2 + 44/3 * x - 1]
    elseif n==5
            [x->-625/24 * x ^ 5 + 625/8 * x ^ 4 - 2125/24 * x ^ 3 + 375/8 * x ^ 2 - 137/12 * x + 1,
            x->3125/24 * x ^ 5 - 4375/12 * x ^ 4 + 8875/24 * x ^ 3 - 1925/12 * x ^ 2 + 25 * x,
            x->-3125/12 * x ^ 5 + 8125/12 * x ^ 4 - 7375/12 * x ^ 3 + 2675/12 * x ^ 2 - 25 * x,
            x->3125/12 * x ^ 5 - 625 * x ^ 4 + 6125/12 * x ^ 3 - 325/2 * x ^ 2 + 50/3 * x,
            x->-3125/24 * x ^ 5 + 6875/24 * x ^ 4 - 5125/24 * x ^ 3 + 1525/24 * x ^ 2 - 25/4 * x,
            x->625/24 * x ^ 5 - 625/12 * x ^ 4 + 875/24 * x ^ 3 - 125/12 * x ^ 2 + x],
            [x->-3125/24 * x ^ 4 + 625/2 * x ^ 3 - 2125/8 * x ^ 2 + 375/4 * x - 137/12,
            x->15625/24 * x ^ 4 - 4375/3 * x ^ 3 + 8875/8 * x ^ 2 - 1925/6 * x + 25,
            x->-15625/12 * x ^ 4 + 8125/3 * x ^ 3 - 7375/4 * x ^ 2 + 2675/6 * x - 25,
            x->15625/12 * x ^ 4 - 2500 * x ^ 3 + 6125/4 * x ^ 2 - 325 * x + 50/3,
            x->-15625/24 * x ^ 4 + 6875/6 * x ^ 3 - 5125/8 * x ^ 2 + 1525/12 * x - 25/4,
            x->3125/24 * x ^ 4 - 625/3 * x ^ 3 + 875/8 * x ^ 2 - 125/6 * x + 1]
    end
end

struct Lagrange
    l
    dl
    degree
    function Lagrange(degree::Integer)
        l,dl=LagrangeBase(degree)
        new(l,dl,degree)
    end
end

function Quadrature(E::Lagrange,nq)
    Q=Quad(nq)
    n=E.degree+1
    L=Vector{Vector{Float64}}(undef,n)
    dL=Vector{Vector{Float64}}(undef,n)
    for i = 1:n
        L[i]=E.l[i].(Q.Points)
        dL[i]=E.dl[i].(Q.Points)
    end
    L, dL, Q
end
